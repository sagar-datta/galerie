#root {
  width: 100%;
  min-height: 100vh;
}

.relative {
  position: relative;
}

.inline-flex {
  display: inline-flex;
}

button {
  z-index: 70;
  contain: layout style;
}

.city-text:hover {
  color: #ff685b !important; /* ADD !important */
}

#selected-city-element {
  opacity: 0;
  pointer-events: auto;
  will-change: transform, opacity, top, left;
  transform-origin: center center;
  backface-visibility: hidden;
  -webkit-font-smoothing: antialiased;
}

.ticker-row {
  display: flex;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-duration: 900s; /* 15 minutes */
  width: fit-content;
  min-width: 100%;
  will-change: transform;
}

.ticker-row.paused {
  animation-play-state: paused !important;
}

@keyframes ticker-right-to-left {
  0% {
    transform: translateX(0%); /* Start at original position */
  }
  100% {
    transform: translateX(-60%); /* Move left but keep some text visible */
  }
}

@keyframes ticker-left-to-right {
  0% {
    transform: translateX(20%); /* Start slightly right */
  }
  100% {
    transform: translateX(-40%); /* Move left but keep more text visible */
  }
}

.ticker-row {
  display: flex;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-duration: 900s; /* 15 minutes */
  width: fit-content; /* Make sure the container only takes the width of its content */
  min-width: 100%; /* Ensure it at least covers the container width for looping */
}

/* Removed .ticker-row.even and .ticker-row.odd animation-name and flex-direction */
/* We will control animation direction and initial position via inline styles in JSX */
